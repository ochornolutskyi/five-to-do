{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/superproger/workspace/five-to-do-main/to-do/src/components/TodosList/TodoItemContainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ChangingTitleRenderer from \"./TodoItemTitle/ChangingTitleRenderer\";\nimport DefaultTitleRenderer from \"./TodoItemTitle/DefaultTitleRenderer\";\n\nconst TodoItemContainer = ({\n  id,\n  title,\n  completed,\n  completeTaskClickHandler,\n  changeTaskClickHandler,\n  removeTaskClickHandler\n}) => {\n  _s();\n\n  const [isChanging, setIsChanging] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isChanging ? /*#__PURE__*/_jsxDEV(DefaultTitleRenderer, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(ChangingTitleRenderer, {\n      title: title,\n      id: id,\n      changeTaskClickHandler: changeTaskClickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), completed === false && !isChanging && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => completeTaskClickHandler(id),\n      children: \"done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 49\n    }, this), completed === false && !isChanging && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsChanging(true),\n      children: \"change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeTaskClickHandler(id),\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TodoItemContainer, \"0gyjCafQwlrJ6RpHB5ae4po1BkI=\");\n\n_c = TodoItemContainer;\nexport default TodoItemContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItemContainer\");","map":{"version":3,"sources":["/home/superproger/workspace/five-to-do-main/to-do/src/components/TodosList/TodoItemContainer/index.js"],"names":["React","useState","ChangingTitleRenderer","DefaultTitleRenderer","TodoItemContainer","id","title","completed","completeTaskClickHandler","changeTaskClickHandler","removeTaskClickHandler","isChanging","setIsChanging"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AACxBC,EAAAA,EADwB;AAExBC,EAAAA,KAFwB;AAGxBC,EAAAA,SAHwB;AAIxBC,EAAAA,wBAJwB;AAKxBC,EAAAA,sBALwB;AAMxBC,EAAAA;AANwB,CAAD,KAOpB;AAAA;;AACH,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;AACA,sBACG;AAAA,eACI,CAACU,UAAD,gBACE,QAAC,oBAAD;AAAsB,MAAA,KAAK,EAAEL;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE,QAAC,qBAAD;AAAuB,MAAA,KAAK,EAAEA,KAA9B;AAAqC,MAAA,EAAE,EAAED,EAAzC;AAA6C,MAAA,sBAAsB,EAAEI;AAArE;AAAA;AAAA;AAAA;AAAA,YAJN,EAMIF,SAAS,KAAK,KAAd,IAAuB,CAACI,UAAxB,iBAAsC;AAAQ,MAAA,OAAO,EAAE,MAAMH,wBAAwB,CAACH,EAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAN1C,EAOIE,SAAS,KAAK,KAAd,IAAuB,CAACI,UAAxB,iBAAsC;AAAQ,MAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,IAAD,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAP1C,eAQG;AAAQ,MAAA,OAAO,EAAE,MAAMF,sBAAsB,CAACL,EAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAYF,CArBD;;GAAMD,iB;;KAAAA,iB;AAuBN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ChangingTitleRenderer from \"./TodoItemTitle/ChangingTitleRenderer\";\nimport DefaultTitleRenderer from \"./TodoItemTitle/DefaultTitleRenderer\";\n\nconst TodoItemContainer = ({\n   id,\n   title,\n   completed,\n   completeTaskClickHandler,\n   changeTaskClickHandler,\n   removeTaskClickHandler,\n}) => {\n   const [isChanging, setIsChanging] = useState(false);\n   return (\n      <div>\n         {!isChanging ? (\n            <DefaultTitleRenderer title={title} />\n         ) : (\n            <ChangingTitleRenderer title={title} id={id} changeTaskClickHandler={changeTaskClickHandler} />\n         )}\n         {completed === false && !isChanging && <button onClick={() => completeTaskClickHandler(id)}>done</button>}\n         {completed === false && !isChanging && <button onClick={() => setIsChanging(true)}>change</button>}\n         <button onClick={() => removeTaskClickHandler(id)}>remove</button>\n      </div>\n   );\n};\n\nexport default TodoItemContainer;\n"]},"metadata":{},"sourceType":"module"}