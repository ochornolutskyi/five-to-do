{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/superproger/workspace/five-to-do/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\nimport CreateTask from \"./components/CreateTask\";\nimport ErrorHint from \"./components/ErrorHint\";\nimport TodosList from \"./components/TodosList\";\nimport { fetchTodos_1 } from \"./redux/actions\";\n\nfunction App() {\n  _s();\n\n  const isLoading = useSelector(state => state.todos_1.isLoading);\n  const todos_1 = useSelector(state => state.todos_1.todos);\n  const dispatch = useDispatch();\n  /* const createTaskClickHandler = (id, title, completed) => {\n     setTodos([...todos, { id, title, completed }]);\n  };\n  const completeTaskClickHandler = (id) => {\n     let newTodos = todos.filter((todo) => todo.id !== id);\n     let completedTodo = todos.filter((todo) => todo.id === id)[0];\n     completedTodo.completed = true;\n     newTodos.push(completedTodo);\n     setTodos(newTodos);\n  };\n  const changeTaskClickHandler = (id, title) => {\n     let newTodos = [...todos];\n     let changingTask = newTodos.find((todo) => todo.id === id);\n     if (title === changingTask.title) return;\n     changingTask.title = title.trim();\n     setTodos(newTodos);\n  };\n  const removeTaskClickHandler = (id) => {\n     const newTodos = todos.filter((todo) => todo.id !== id);\n     setTodos(newTodos);\n  }; */\n\n  useEffect(() => {\n    dispatch(fetchTodos_1());\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !todos_1 ? /*#__PURE__*/_jsxDEV(ErrorHint, {\n      hintText: \"Something went wrong, please, reload the page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\"/* \", /*#__PURE__*/_jsxDEV(CreateTask, {\n        createTaskClickHandler: createTaskClickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }, this), \" */\", /*#__PURE__*/_jsxDEV(\"hr\", {\n        style: {\n          width: \"95%\",\n          borderColor: \"#fff\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TodosList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"QzSoj3nbPnFTp2IuGm7Eqp7S3eQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/superproger/workspace/five-to-do/src/App.js"],"names":["useEffect","useDispatch","useSelector","CreateTask","ErrorHint","TodosList","fetchTodos_1","App","isLoading","state","todos_1","todos","dispatch","createTaskClickHandler","width","borderColor"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACZ,QAAMC,SAAS,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,SAA1B,CAA7B;AACA,QAAME,OAAO,GAAGR,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,KAA1B,CAA3B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACGD,EAAAA,SAAS,CAAC,MAAM;AACbY,IAAAA,QAAQ,CAACN,YAAY,EAAb,CAAR;AACF,GAFQ,EAEN,EAFM,CAAT;AAIA,MAAIE,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,sBACG;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACI,CAACE,OAAD,gBACE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,gBAGE;AAAA,qCACM,QAAC,UAAD;AAAY,QAAA,sBAAsB,EAAEG;AAApC;AAAA;AAAA;AAAA;AAAA,cADN,sBAEG;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,WAAW,EAAE;AAA7B;AAAX;AAAA;AAAA;AAAA;AAAA,cAFH,eAGG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAHH;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADH;AAaF;;GA5CQR,G;UACYL,W,EACFA,W,EACCD,W;;;KAHXM,G;AA8CT,eAAeA,GAAf","sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\nimport CreateTask from \"./components/CreateTask\";\nimport ErrorHint from \"./components/ErrorHint\";\nimport TodosList from \"./components/TodosList\";\nimport { fetchTodos_1 } from \"./redux/actions\";\n\nfunction App() {\n   const isLoading = useSelector((state) => state.todos_1.isLoading);\n   const todos_1 = useSelector((state) => state.todos_1.todos);\n   const dispatch = useDispatch();\n\n   /* const createTaskClickHandler = (id, title, completed) => {\n      setTodos([...todos, { id, title, completed }]);\n   };\n   const completeTaskClickHandler = (id) => {\n      let newTodos = todos.filter((todo) => todo.id !== id);\n      let completedTodo = todos.filter((todo) => todo.id === id)[0];\n      completedTodo.completed = true;\n      newTodos.push(completedTodo);\n      setTodos(newTodos);\n   };\n   const changeTaskClickHandler = (id, title) => {\n      let newTodos = [...todos];\n      let changingTask = newTodos.find((todo) => todo.id === id);\n      if (title === changingTask.title) return;\n      changingTask.title = title.trim();\n      setTodos(newTodos);\n   };\n   const removeTaskClickHandler = (id) => {\n      const newTodos = todos.filter((todo) => todo.id !== id);\n      setTodos(newTodos);\n   }; */\n   useEffect(() => {\n      dispatch(fetchTodos_1());\n   }, []);\n\n   if (isLoading) return <div>Loading...</div>;\n   return (\n      <div className=\"App\">\n         {!todos_1 ? (\n            <ErrorHint hintText=\"Something went wrong, please, reload the page\" />\n         ) : (\n            <>\n               /* <CreateTask createTaskClickHandler={createTaskClickHandler} /> */\n               <hr style={{ width: \"95%\", borderColor: \"#fff\" }} />\n               <TodosList />\n            </>\n         )}\n      </div>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}