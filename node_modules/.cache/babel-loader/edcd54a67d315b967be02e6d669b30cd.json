{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/superproger/workspace/five-to-do-main/to-do/src/components/TodosList/TodoItemContainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport EditingTitleRenderer from \"./TodoItemTitle/EditingTitleRenderer\";\nimport DefaultTitleRenderer from \"./TodoItemTitle/DefaultTitleRenderer\";\nconst TodoItemContainer = /*#__PURE__*/React.forwardRef(_c = _s(({\n  className,\n  id,\n  title,\n  completed,\n  completeTaskClickHandler,\n  changeTaskClickHandler,\n  removeTaskClickHandler\n}, ref) => {\n  _s();\n\n  const todoTitleClasses = `${className}-title`;\n  const [isEditing, setIsEditing] = useState(false);\n  const titleRenderer = !isEditing ? /*#__PURE__*/_jsxDEV(DefaultTitleRenderer, {\n    className: todoTitleClasses,\n    title: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this) : /*#__PURE__*/_jsxDEV(EditingTitleRenderer, {\n    className: `${todoTitleClasses} editing`,\n    title: title,\n    id: id,\n    changeTaskClickHandler: changeTaskClickHandler,\n    setIsEditing: setIsEditing\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n  const isRenderButton = completed === false && !isEditing ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [titleRenderer, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${className}-options`,\n      children: [isRenderButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${className}-options__done`,\n        onClick: () => completeTaskClickHandler(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this), isRenderButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${className}-options__edit`,\n        onClick: () => setIsEditing(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `${className}-options__remove`,\n        onClick: () => removeTaskClickHandler(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}, \"N4qUVpaen/rROL8jPu/4huFD8lA=\"));\n_c2 = TodoItemContainer;\nexport default TodoItemContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TodoItemContainer$React.forwardRef\");\n$RefreshReg$(_c2, \"TodoItemContainer\");","map":{"version":3,"sources":["/home/superproger/workspace/five-to-do-main/to-do/src/components/TodosList/TodoItemContainer/index.js"],"names":["React","useState","EditingTitleRenderer","DefaultTitleRenderer","TodoItemContainer","forwardRef","className","id","title","completed","completeTaskClickHandler","changeTaskClickHandler","removeTaskClickHandler","ref","todoTitleClasses","isEditing","setIsEditing","titleRenderer","isRenderButton"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;AAEA,MAAMC,iBAAiB,gBAAGJ,KAAK,CAACK,UAAN,SACvB,CACG;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,EAAb;AAAiBC,EAAAA,KAAjB;AAAwBC,EAAAA,SAAxB;AAAmCC,EAAAA,wBAAnC;AAA6DC,EAAAA,sBAA7D;AAAqFC,EAAAA;AAArF,CADH,EAEGC,GAFH,KAGK;AAAA;;AACF,QAAMC,gBAAgB,GAAI,GAAER,SAAU,QAAtC;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMgB,aAAa,GAAG,CAACF,SAAD,gBACnB,QAAC,oBAAD;AAAsB,IAAA,SAAS,EAAED,gBAAjC;AAAmD,IAAA,KAAK,EAAEN;AAA1D;AAAA;AAAA;AAAA;AAAA,UADmB,gBAGnB,QAAC,oBAAD;AACG,IAAA,SAAS,EAAG,GAAEM,gBAAiB,UADlC;AAEG,IAAA,KAAK,EAAEN,KAFV;AAGG,IAAA,EAAE,EAAED,EAHP;AAIG,IAAA,sBAAsB,EAAEI,sBAJ3B;AAKG,IAAA,YAAY,EAAEK;AALjB;AAAA;AAAA;AAAA;AAAA,UAHH;AAWA,QAAME,cAAc,GAAGT,SAAS,KAAK,KAAd,IAAuB,CAACM,SAAxB,GAAoC,IAApC,GAA2C,KAAlE;AACA,sBACG;AAAK,IAAA,SAAS,EAAET,SAAhB;AAAA,eACIW,aADJ,eAEG;AAAK,MAAA,SAAS,EAAG,GAAEX,SAAU,UAA7B;AAAA,iBACIY,cAAc,iBACZ;AAAQ,QAAA,SAAS,EAAG,GAAEZ,SAAU,gBAAhC;AAAiD,QAAA,OAAO,EAAE,MAAMI,wBAAwB,CAACH,EAAD;AAAxF;AAAA;AAAA;AAAA;AAAA,cAFN,EAIIW,cAAc,iBACZ;AAAQ,QAAA,SAAS,EAAG,GAAEZ,SAAU,gBAAhC;AAAiD,QAAA,OAAO,EAAE,MAAMU,YAAY,CAAC,IAAD;AAA5E;AAAA;AAAA;AAAA;AAAA,cALN,eAOG;AAAQ,QAAA,SAAS,EAAG,GAAEV,SAAU,kBAAhC;AAAmD,QAAA,OAAO,EAAE,MAAMM,sBAAsB,CAACL,EAAD;AAAxF;AAAA;AAAA;AAAA;AAAA,cAPH;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAcF,CAjCsB,kCAA1B;MAAMH,iB;AAoCN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport EditingTitleRenderer from \"./TodoItemTitle/EditingTitleRenderer\";\nimport DefaultTitleRenderer from \"./TodoItemTitle/DefaultTitleRenderer\";\n\nconst TodoItemContainer = React.forwardRef(\n   (\n      { className, id, title, completed, completeTaskClickHandler, changeTaskClickHandler, removeTaskClickHandler },\n      ref\n   ) => {\n      const todoTitleClasses = `${className}-title`;\n      const [isEditing, setIsEditing] = useState(false);\n      const titleRenderer = !isEditing ? (\n         <DefaultTitleRenderer className={todoTitleClasses} title={title} />\n      ) : (\n         <EditingTitleRenderer\n            className={`${todoTitleClasses} editing`}\n            title={title}\n            id={id}\n            changeTaskClickHandler={changeTaskClickHandler}\n            setIsEditing={setIsEditing}\n         />\n      );\n      const isRenderButton = completed === false && !isEditing ? true : false;\n      return (\n         <div className={className}>\n            {titleRenderer}\n            <div className={`${className}-options`}>\n               {isRenderButton && (\n                  <button className={`${className}-options__done`} onClick={() => completeTaskClickHandler(id)} />\n               )}\n               {isRenderButton && (\n                  <button className={`${className}-options__edit`} onClick={() => setIsEditing(true)} />\n               )}\n               <button className={`${className}-options__remove`} onClick={() => removeTaskClickHandler(id)} />\n            </div>\n         </div>\n      );\n   }\n);\n\nexport default TodoItemContainer;\n"]},"metadata":{},"sourceType":"module"}