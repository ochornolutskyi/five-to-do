{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/superproger/workspace/five-to-do/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\nimport CreateTask from \"./components/CreateTask\";\nimport TodosList from \"./components/TodosList\";\nimport { FETCH_TODOS_1 } from \"./redux/action_types\";\n\nfunction App() {\n  _s();\n\n  // const [todos, setTodos] = useState(null);\n  const isLoading = useSelector(state => state.todos_1.isLoading);\n  const todos_1 = useSelector(state => state.todos_1.todos);\n  const dispatch = useDispatch();\n  /* const createTaskClickHandler = (id, title, completed) => {\n     setTodos([...todos, { id, title, completed }]);\n  };\n  const completeTaskClickHandler = (id) => {\n     let newTodos = todos.filter((todo) => todo.id !== id);\n     let completedTodo = todos.filter((todo) => todo.id === id)[0];\n     completedTodo.completed = true;\n     newTodos.push(completedTodo);\n     setTodos(newTodos);\n  };\n  const changeTaskClickHandler = (id, title) => {\n     let newTodos = [...todos];\n     let changingTask = newTodos.find((todo) => todo.id === id);\n     if (title === changingTask.title) return;\n     changingTask.title = title.trim();\n     setTodos(newTodos);\n  };\n  const removeTaskClickHandler = (id) => {\n     const newTodos = todos.filter((todo) => todo.id !== id);\n     setTodos(newTodos);\n  }; */\n\n  useEffect(() => {\n    /* dispatch({ type: FETCH_TODOS_1 }); */\n    getTodos_1();\n  }, []);\n  useEffect(() => {\n    console.log(todos_1);\n  }, [todos_1]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"wGin4RxPTHgIZQVHM4a/f2URWGQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/superproger/workspace/five-to-do/src/App.js"],"names":["useEffect","useState","useDispatch","useSelector","CreateTask","TodosList","FETCH_TODOS_1","App","isLoading","state","todos_1","todos","dispatch","getTodos_1","console","log"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACZ;AACA,QAAMC,SAAS,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,SAA1B,CAA7B;AACA,QAAME,OAAO,GAAGP,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,KAA1B,CAA3B;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEGF,EAAAA,SAAS,CAAC,MAAM;AACb;AACAa,IAAAA,UAAU;AACZ,GAHQ,EAGN,EAHM,CAAT;AAKAb,EAAAA,SAAS,CAAC,MAAM;AACbc,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACF,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;AAGA,MAAIF,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,sBACG;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UADH;AAYF;;GAjDQD,G;UAEYJ,W,EACFA,W,EACCD,W;;;KAJXK,G;AAmDT,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./App.scss\";\nimport CreateTask from \"./components/CreateTask\";\nimport TodosList from \"./components/TodosList\";\nimport { FETCH_TODOS_1 } from \"./redux/action_types\";\n\nfunction App() {\n   // const [todos, setTodos] = useState(null);\n   const isLoading = useSelector((state) => state.todos_1.isLoading);\n   const todos_1 = useSelector((state) => state.todos_1.todos);\n   const dispatch = useDispatch();\n\n   /* const createTaskClickHandler = (id, title, completed) => {\n      setTodos([...todos, { id, title, completed }]);\n   };\n   const completeTaskClickHandler = (id) => {\n      let newTodos = todos.filter((todo) => todo.id !== id);\n      let completedTodo = todos.filter((todo) => todo.id === id)[0];\n      completedTodo.completed = true;\n      newTodos.push(completedTodo);\n      setTodos(newTodos);\n   };\n   const changeTaskClickHandler = (id, title) => {\n      let newTodos = [...todos];\n      let changingTask = newTodos.find((todo) => todo.id === id);\n      if (title === changingTask.title) return;\n      changingTask.title = title.trim();\n      setTodos(newTodos);\n   };\n   const removeTaskClickHandler = (id) => {\n      const newTodos = todos.filter((todo) => todo.id !== id);\n      setTodos(newTodos);\n   }; */\n\n   useEffect(() => {\n      /* dispatch({ type: FETCH_TODOS_1 }); */\n      getTodos_1();\n   }, []);\n\n   useEffect(() => {\n      console.log(todos_1);\n   }, [todos_1]);\n   if (isLoading) return <div>Loading...</div>;\n   return (\n      <div className=\"App\">\n         {/* <CreateTask createTaskClickHandler={createTaskClickHandler} /> */}\n         {/* <hr style={{ width: \"95%\", borderColor: \"#fff\" }} />\n         <TodosList\n            todos={todos}\n            completeTaskClickHandler={completeTaskClickHandler}\n            changeTaskClickHandler={changeTaskClickHandler}\n            removeTaskClickHandler={removeTaskClickHandler}\n         /> */}\n      </div>\n   );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}