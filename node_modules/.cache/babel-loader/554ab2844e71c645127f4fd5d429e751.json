{"ast":null,"code":"import { FETCH_TODOS_1_SUCCESS, FETCH_TODOS_1_FAILED, FETCH_TODOS_1, ADD_NEW_TASK, COMPLETE_TASK } from \"./action_types\";\nexport const fetchTodos_1 = () => dispatch => {\n  dispatch({\n    type: FETCH_TODOS_1\n  });\n  const TODOS_1_URL = \"https://jsonplaceholder.typicode.com/todos\";\n  setTimeout(() => {\n    fetch(TODOS_1_URL).then(response => {\n      if (response.ok) return response.json();\n    }).then(data => dispatch({\n      type: FETCH_TODOS_1_SUCCESS,\n      payload: data.splice(0, 15)\n    })).catch(err => dispatch({\n      type: FETCH_TODOS_1_FAILED,\n      payload: err\n    }));\n  }, 2000);\n};\nexport const addNewTask = title => {\n  const newTask = {\n    id: Date.now(),\n    title,\n    completed: false\n  };\n  return {\n    type: ADD_NEW_TASK,\n    payload: newTask\n  };\n};\nexport const completeTask = id => {\n  return {\n    type: COMPLETE_TASK,\n    payload: id\n  };\n};","map":{"version":3,"sources":["/home/superproger/workspace/five-to-do/src/redux/actions.js"],"names":["FETCH_TODOS_1_SUCCESS","FETCH_TODOS_1_FAILED","FETCH_TODOS_1","ADD_NEW_TASK","COMPLETE_TASK","fetchTodos_1","dispatch","type","TODOS_1_URL","setTimeout","fetch","then","response","ok","json","data","payload","splice","catch","err","addNewTask","title","newTask","id","Date","now","completed","completeTask"],"mappings":"AAAA,SACGA,qBADH,EAEGC,oBAFH,EAGGC,aAHH,EAIGC,YAJH,EAKGC,aALH,QAMO,gBANP;AAQA,OAAO,MAAMC,YAAY,GAAG,MAAOC,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACA,QAAMM,WAAW,GAAG,4CAApB;AACAC,EAAAA,UAAU,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACF,WAAD,CAAL,CACIG,IADJ,CACUC,QAAD,IAAc;AACjB,UAAIA,QAAQ,CAACC,EAAb,EAAiB,OAAOD,QAAQ,CAACE,IAAT,EAAP;AACnB,KAHJ,EAIIH,IAJJ,CAIUI,IAAD,IAAUT,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,qBAAR;AAA+BgB,MAAAA,OAAO,EAAED,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAe,EAAf;AAAxC,KAAD,CAJ3B,EAKIC,KALJ,CAKWC,GAAD,IAASb,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,oBAAR;AAA8Be,MAAAA,OAAO,EAAEG;AAAvC,KAAD,CAL3B;AAMF,GAPS,EAOP,IAPO,CAAV;AAQF,CAXM;AAaP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAClC,QAAMC,OAAO,GAAG;AAAEC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EAAN;AAAkBJ,IAAAA,KAAlB;AAAyBK,IAAAA,SAAS,EAAE;AAApC,GAAhB;AACA,SAAO;AACJnB,IAAAA,IAAI,EAAEJ,YADF;AAEJa,IAAAA,OAAO,EAAEM;AAFL,GAAP;AAIF,CANM;AAQP,OAAO,MAAMK,YAAY,GAAIJ,EAAD,IAAQ;AACjC,SAAO;AACJhB,IAAAA,IAAI,EAAEH,aADF;AAEJY,IAAAA,OAAO,EAAEO;AAFL,GAAP;AAIF,CALM","sourcesContent":["import {\n   FETCH_TODOS_1_SUCCESS,\n   FETCH_TODOS_1_FAILED,\n   FETCH_TODOS_1,\n   ADD_NEW_TASK,\n   COMPLETE_TASK,\n} from \"./action_types\";\n\nexport const fetchTodos_1 = () => (dispatch) => {\n   dispatch({ type: FETCH_TODOS_1 });\n   const TODOS_1_URL = \"https://jsonplaceholder.typicode.com/todos\";\n   setTimeout(() => {\n      fetch(TODOS_1_URL)\n         .then((response) => {\n            if (response.ok) return response.json();\n         })\n         .then((data) => dispatch({ type: FETCH_TODOS_1_SUCCESS, payload: data.splice(0, 15) }))\n         .catch((err) => dispatch({ type: FETCH_TODOS_1_FAILED, payload: err }));\n   }, 2000);\n};\n\nexport const addNewTask = (title) => {\n   const newTask = { id: Date.now(), title, completed: false };\n   return {\n      type: ADD_NEW_TASK,\n      payload: newTask,\n   };\n};\n\nexport const completeTask = (id) => {\n   return {\n      type: COMPLETE_TASK,\n      payload: id,\n   };\n};\n"]},"metadata":{},"sourceType":"module"}