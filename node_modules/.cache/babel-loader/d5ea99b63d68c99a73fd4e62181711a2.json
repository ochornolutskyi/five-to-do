{"ast":null,"code":"import { FETCH_TODOS_1, FETCH_TODOS_1_FAILED, FETCH_TODOS_1_SUCCESS, ADD_NEW_TASK } from \"../action_types\";\nconst initialState = {\n  isLoading: null,\n  tasks: [],\n  todoTasks: [],\n  completedTasks: []\n};\n\nconst filterTodoTask = tasks => tasks.filter(task => !task.completed);\n\nconst filterCompletedTask = tasks => tasks.filter(task => task.completed);\n\nconst todos_1_reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_TODOS_1:\n      return { ...state,\n        isLoading: true\n      };\n\n    case FETCH_TODOS_1_SUCCESS:\n      return { ...state,\n        isLoading: false,\n        tasks: action.payload,\n        todoTasks: filterTodoTask(action.payload),\n        completedTasks: filterCompletedTask(action.payload)\n      };\n\n    case FETCH_TODOS_1_FAILED:\n      return { ...state,\n        isLoading: false,\n        tasks: null\n      };\n\n    case ADD_NEW_TASK:\n      let newTasks = [...state.tasks].push(action.payload);\n      console.log(newTasks);\n      return { ...state,\n        tasks: newTasks // todoTasks: filterTodoTask(newTasks),\n        // completedTasks: filterCompletedTask(newTasks),\n\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todos_1_reducer;","map":{"version":3,"sources":["/home/superproger/workspace/five-to-do/src/redux/reducers/todos_1_reducer.js"],"names":["FETCH_TODOS_1","FETCH_TODOS_1_FAILED","FETCH_TODOS_1_SUCCESS","ADD_NEW_TASK","initialState","isLoading","tasks","todoTasks","completedTasks","filterTodoTask","filter","task","completed","filterCompletedTask","todos_1_reducer","state","action","type","payload","newTasks","push","console","log"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,oBAAxB,EAA8CC,qBAA9C,EAAqEC,YAArE,QAAyF,iBAAzF;AAEA,MAAMC,YAAY,GAAG;AAClBC,EAAAA,SAAS,EAAE,IADO;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,SAAS,EAAE,EAHO;AAIlBC,EAAAA,cAAc,EAAE;AAJE,CAArB;;AAOA,MAAMC,cAAc,GAAIH,KAAD,IAAWA,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAU,CAACA,IAAI,CAACC,SAA7B,CAAlC;;AACA,MAAMC,mBAAmB,GAAIP,KAAD,IAAWA,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,SAA5B,CAAvC;;AAEA,MAAME,eAAe,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAKjB,aAAL;AACG,aAAO,EAAE,GAAGe,KAAL;AAAYV,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACH,SAAKH,qBAAL;AACG,aAAO,EACJ,GAAGa,KADC;AAEJV,QAAAA,SAAS,EAAE,KAFP;AAGJC,QAAAA,KAAK,EAAEU,MAAM,CAACE,OAHV;AAIJX,QAAAA,SAAS,EAAEE,cAAc,CAACO,MAAM,CAACE,OAAR,CAJrB;AAKJV,QAAAA,cAAc,EAAEK,mBAAmB,CAACG,MAAM,CAACE,OAAR;AAL/B,OAAP;;AAOH,SAAKjB,oBAAL;AACG,aAAO,EAAE,GAAGc,KAAL;AAAYV,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,KAAK,EAAE;AAArC,OAAP;;AACH,SAAKH,YAAL;AACG,UAAIgB,QAAQ,GAAG,CAAC,GAAGJ,KAAK,CAACT,KAAV,EAAiBc,IAAjB,CAAsBJ,MAAM,CAACE,OAA7B,CAAf;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,aAAO,EACJ,GAAGJ,KADC;AAEJT,QAAAA,KAAK,EAAEa,QAFH,CAGJ;AACA;;AAJI,OAAP;;AAMH;AACG,aAAOJ,KAAP;AAvBN;AAyBF,CA1BD;;AA4BA,eAAeD,eAAf","sourcesContent":["import { FETCH_TODOS_1, FETCH_TODOS_1_FAILED, FETCH_TODOS_1_SUCCESS, ADD_NEW_TASK } from \"../action_types\";\n\nconst initialState = {\n   isLoading: null,\n   tasks: [],\n   todoTasks: [],\n   completedTasks: [],\n};\n\nconst filterTodoTask = (tasks) => tasks.filter((task) => !task.completed);\nconst filterCompletedTask = (tasks) => tasks.filter((task) => task.completed);\n\nconst todos_1_reducer = (state = initialState, action) => {\n   switch (action.type) {\n      case FETCH_TODOS_1:\n         return { ...state, isLoading: true };\n      case FETCH_TODOS_1_SUCCESS:\n         return {\n            ...state,\n            isLoading: false,\n            tasks: action.payload,\n            todoTasks: filterTodoTask(action.payload),\n            completedTasks: filterCompletedTask(action.payload),\n         };\n      case FETCH_TODOS_1_FAILED:\n         return { ...state, isLoading: false, tasks: null };\n      case ADD_NEW_TASK:\n         let newTasks = [...state.tasks].push(action.payload);\n         console.log(newTasks)\n         return {\n            ...state,\n            tasks: newTasks,\n            // todoTasks: filterTodoTask(newTasks),\n            // completedTasks: filterCompletedTask(newTasks),\n         };\n      default:\n         return state;\n   }\n};\n\nexport default todos_1_reducer;\n"]},"metadata":{},"sourceType":"module"}